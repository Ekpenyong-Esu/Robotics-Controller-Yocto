# =================================================================
# Video4Linux2 (V4L2) Configuration
# =================================================================
# This configuration enables camera and video device support for
# computer vision and image processing in robotics applications.
#
# V4L2 Applications in robotics:
# - Computer vision and object recognition
# - Navigation and SLAM (Simultaneous Localization and Mapping)
# - Quality inspection and measurement systems
# - Remote monitoring and telepresence
# - Barcode/QR code scanning
# - Gesture recognition and human-robot interaction
# - Visual servoing for precise positioning
# - Stereo vision for depth perception
#
# Supported camera types:
# - USB cameras (UVC - USB Video Class)
# - CSI cameras (Camera Serial Interface)
# - IP cameras (network-based, via userspace)
# - Analog cameras (via capture cards)
#
# Video formats supported:
# - Raw formats: YUYV, MJPEG, RGB24, etc.
# - Compressed formats: H.264, H.265 (hardware dependent)
# - Multiple resolutions and frame rates
# =================================================================

# Video device support - core video subsystem
# Enables the foundation for all video capture and output devices
CONFIG_VIDEO_DEV=y

# Video4Linux2 API support - modern video interface
# Provides the V4L2 API for video applications (OpenCV, GStreamer, etc.)
CONFIG_VIDEO_V4L2=y

# V4L2 sub-device API - advanced device control
# Enables fine-grained control of camera sensors and processing elements
# Required for advanced camera features like manual exposure, focus, etc.
CONFIG_VIDEO_V4L2_SUBDEV_API=y

# Media controller framework - device topology management
# Provides a framework for complex camera systems with multiple components
# Useful for cameras with separate sensor, ISP, and output components
CONFIG_MEDIA_SUPPORT=y

# Camera support in media framework
# Specifically enables camera-related media devices and controls
CONFIG_MEDIA_CAMERA_SUPPORT=y

# Media controller support - device graph management
# Allows runtime configuration of media device pipelines
# Required for advanced camera systems and processing chains
CONFIG_MEDIA_CONTROLLER=y

# V4L platform drivers support - platform-specific camera drivers
# Enables support for SoC-integrated cameras and capture devices
# Required for CSI cameras and embedded camera interfaces
CONFIG_V4L_PLATFORM_DRIVERS=y

# USB Video Class (UVC) driver support - USB cameras
# Enables support for standard USB webcams and professional USB cameras
# Most USB cameras are UVC-compatible and work plug-and-play
# Supports MJPEG, uncompressed YUV, and H.264 streams (camera dependent)
CONFIG_USB_VIDEO_CLASS=y
