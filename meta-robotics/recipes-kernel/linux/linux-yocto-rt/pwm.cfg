# =================================================================
# PWM (Pulse Width Modulation) Configuration
# =================================================================
# This configuration enables PWM support for motor control, servo
# positioning, and analog output generation in robotics applications.
#
# PWM Applications in robotics:
# - DC motor speed control (ESCs, motor drivers)
# - Servo motor positioning (standard and continuous rotation servos)
# - LED brightness control and lighting effects
# - Buzzer/speaker control for audio feedback
# - Fan speed control for cooling systems
# - Analog signal generation (primitive DAC functionality)
# - Stepper motor microstepping control
#
# PWM Technical details:
# - Frequency range: typically 50Hz (servos) to 20kHz+ (motors)
# - Duty cycle: 0-100% for full control range
# - Resolution: hardware-dependent, typically 8-16 bits
# - Multiple independent channels available
# - Hardware-based generation for precise timing
# =================================================================

# Core PWM subsystem - enables the PWM framework infrastructure
CONFIG_PWM=y

# PWM sysfs interface - provides /sys/class/pwm control interface
# Allows userspace applications to control PWM channels via sysfs
# Usage: echo values to /sys/class/pwm/pwmchipX/pwmY/{period,duty_cycle,enable}
CONFIG_PWM_SYSFS=y

# TI EHRPWM driver - Enhanced High Resolution PWM for BeagleBone Black
# Supports the AM335x processor's built-in EHRPWM modules (EHRPWM0, EHRPWM1, EHRPWM2)
# Features:
# - High resolution timing (sub-microsecond precision)
# - Independent A/B channel outputs per module
# - Hardware-based dead-band generation for motor control
# - Trip zone support for safety shutoffs
# - Synchronization between multiple PWM modules
CONFIG_PWM_TIEHRPWM=y
