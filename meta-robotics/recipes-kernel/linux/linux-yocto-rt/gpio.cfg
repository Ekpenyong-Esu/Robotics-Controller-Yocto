# =================================================================
# GPIO (General Purpose Input/Output) Configuration
# =================================================================
# This configuration enables GPIO support for robotics applications
# including digital sensors, LEDs, buttons, and general I/O operations.
#
# Use cases:
# - Status LEDs and indicator lights
# - Push buttons and switches for user input
# - Digital sensors (limit switches, encoders, proximity sensors)
# - Relay control for actuators
# - General purpose digital I/O operations
#
# Interfaces provided:
# - /sys/class/gpio/* - Sysfs interface for userspace GPIO control
# - /dev/gpiochipX - Character device interface (modern approach)
# - GPIO interrupt support for edge detection
# =================================================================

# Core GPIO library - provides the foundation for all GPIO operations
CONFIG_GPIOLIB=y

# Legacy sysfs interface - allows GPIO control via /sys/class/gpio
# Note: While deprecated, still widely used in existing applications
CONFIG_GPIO_SYSFS=y

# Modern character device interface - preferred method for new applications
# Provides /dev/gpiochipX devices for direct GPIO access
CONFIG_GPIO_CDEV=y

# OMAP GPIO driver - specific to BeagleBone Black (AM335x) processor
# Enables hardware GPIO banks and interrupt support
CONFIG_GPIO_OMAP=y

# LED GPIO driver - enables GPIO-controlled LEDs defined in device tree
# Provides /sys/class/leds interface for LED control
CONFIG_LEDS_GPIO=y

# GPIO input keys driver - enables GPIO-connected buttons and switches
# Provides standard Linux input events for button presses
CONFIG_INPUT_GPIO_KEYS=y


