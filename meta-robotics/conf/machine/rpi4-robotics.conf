# =================================================================
# RASPBERRY PI 4 ROBOTICS MACHINE CONFIGURATION
# =================================================================
# This machine configuration defines a Raspberry Pi 4 optimized for
# robotics applications with computer vision and wireless capabilities.
#
# Hardware specifications:
# - Broadcom BCM2711 ARM Cortex-A72 quad-core 1.5GHz processor
# - 1GB/2GB/4GB/8GB LPDDR4 RAM (model dependent)
# - VideoCore VI GPU with hardware video acceleration
# - 40-pin GPIO header (26 GPIO pins, I2C, SPI, UART)
# - 2x USB 3.0, 2x USB 2.0, Gigabit Ethernet
# - Wi-Fi 802.11ac, Bluetooth 5.0, dual-band wireless
# - 2x micro-HDMI, CSI camera, DSI display connectors
# - microSD card slot for storage
#
# Robotics features enabled:
# - Real-time kernel (PREEMPT_RT) for deterministic timing
# - Hardware-accelerated computer vision (VideoCore GPU)
# - Wireless communication (Wi-Fi, Bluetooth)
# - GPIO control for sensors and actuators
# - Camera interface for computer vision applications
# - Hardware video encoding/decoding for streaming
# - I2C, SPI, UART interfaces for sensors and modules
# =================================================================

#@TYPE: Machine
#@NAME: Raspberry Pi 4 Robotics Platform
#@DESCRIPTION: Machine configuration for RPi4-based robotics controller with computer vision capabilities

# =================================================================
# BASE MACHINE CONFIGURATION
# =================================================================
# Inherit from the standard Raspberry Pi 4 64-bit configuration
# This provides the basic hardware support, bootloader, and drivers
require conf/machine/raspberrypi4-64.conf

# =================================================================
# ROBOTICS-SPECIFIC FEATURES
# =================================================================
# Add robotics-specific machine features to enable hardware interfaces
# - robotics: Custom feature for robotics applications
# - gpio: General Purpose Input/Output support (40-pin header)
# - i2c: Inter-Integrated Circuit bus for sensors
# - spi: Serial Peripheral Interface for high-speed devices
# - uart: Universal Asynchronous Receiver-Transmitter
# - bluetooth: Bluetooth 5.0 for wireless communication
# - wifi: Wi-Fi 802.11ac for network connectivity
MACHINE_FEATURES += "robotics gpio i2c spi uart bluetooth wifi"

# =================================================================
# HARDWARE FEATURE EXCLUSIONS
# =================================================================
# Remove RTC (Real-Time Clock) from backfill to avoid conflicts
# The Raspberry Pi doesn't have a built-in battery-backed RTC
# External RTC modules can be added via I2C if needed
MACHINE_FEATURES_BACKFILL_CONSIDERED += "rtc"

# =================================================================
# ESSENTIAL ROBOTICS PACKAGES
# =================================================================
# Automatically install the robotics controller application
# This ensures the main robotics software is always present
# MACHINE_ESSENTIAL_EXTRA_RDEPENDS packages are installed in all images
MACHINE_ESSENTIAL_EXTRA_RDEPENDS += "robotics-controller"

# =================================================================
# GPU MEMORY CONFIGURATION
# =================================================================
# Allocate 64MB of memory to the VideoCore GPU
# This enables hardware video acceleration for computer vision:
# - Hardware H.264/H.265 encoding and decoding
# - OpenGL ES support for graphics processing
# - Video processing and format conversion
# - Camera interface (CSI) support
# Increase this value (128MB, 256MB) for intensive computer vision tasks
GPU_MEM = "64"

# =================================================================
# UART CONFIGURATION
# =================================================================
# Enable UART interface on GPIO pins 14/15 (pins 8/10)
# This allows communication with:
# - GPS modules for navigation
# - Serial sensors and devices
# - Debug console access
# - Communication with other microcontrollers
ENABLE_UART = "1"
