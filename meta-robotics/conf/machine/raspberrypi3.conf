# =================================================================
# RASPBERRY PI 3 ROBOTICS MACHINE CONFIGURATION
# =================================================================
# This machine configuration defines a Raspberry Pi 3 optimized for
# robotics applications with computer vision and wireless capabilities.
#
# Hardware specifications:
# - Broadcom BCM2837 ARM Cortex-A53 quad-core 1.2GHz processor
# - 1GB LPDDR2 RAM
# - VideoCore IV GPU with hardware video acceleration
# - 40-pin GPIO header (26 GPIO pins, I2C, SPI, UART)
# - 4x USB 2.0, Ethernet 100Mbps
# - Wi-Fi 802.11n, Bluetooth 4.1, wireless connectivity
# - HDMI, CSI camera, DSI display connectors
# - microSD card slot for storage
#
# Robotics features enabled:
# - Real-time kernel support for deterministic timing
# - Hardware-accelerated computer vision (VideoCore GPU)
# - Wireless communication (Wi-Fi, Bluetooth)
# - GPIO control for sensors and actuators
# - Camera interface for computer vision applications
# - Hardware video encoding/decoding
# - I2C, SPI, UART interfaces for sensors and modules
# =================================================================

#@TYPE: Machine
#@NAME: Raspberry Pi 3 Robotics Platform
#@DESCRIPTION: Machine configuration for RPi3-based robotics controller with computer vision capabilities

# =================================================================
# BASE MACHINE CONFIGURATION
# =================================================================
# Inherit from the standard Raspberry Pi 3 64-bit configuration
# This provides the basic hardware support, bootloader, and drivers
require conf/machine/raspberrypi3-64.conf

# =================================================================
# ROBOTICS-SPECIFIC FEATURES
# =================================================================
# Add robotics-specific machine features to enable hardware interfaces
# - robotics: Custom feature for robotics applications
# - gpio: General Purpose Input/Output support (40-pin header)
# - i2c: Inter-Integrated Circuit bus for sensors
# - spi: Serial Peripheral Interface for high-speed devices
# - uart: Universal Asynchronous Receiver-Transmitter
# - bluetooth: Bluetooth 4.1 for wireless communication
# - wifi: Wi-Fi 802.11n for network connectivity
MACHINE_FEATURES += "robotics gpio i2c spi uart bluetooth wifi"

# =================================================================
# HARDWARE FEATURE EXCLUSIONS
# =================================================================
# Remove RTC (Real-Time Clock) from backfill to avoid conflicts
# The Raspberry Pi doesn't have a built-in battery-backed RTC
# External RTC modules can be added via I2C if needed
MACHINE_FEATURES_BACKFILL_CONSIDERED += "rtc"

# =================================================================
# ESSENTIAL ROBOTICS PACKAGES
# =================================================================
# Automatically install the robotics controller application
# This ensures the main robotics software is always present
# MACHINE_ESSENTIAL_EXTRA_RDEPENDS packages are installed in all images
MACHINE_ESSENTIAL_EXTRA_RDEPENDS += "robotics-controller"

# =================================================================
# GPU MEMORY CONFIGURATION
# =================================================================
# Allocate 64MB of memory to the VideoCore GPU
# This enables hardware video acceleration for computer vision:
# - Hardware H.264 encoding and decoding
# - OpenGL ES support for graphics processing
# - Video processing and format conversion
# - Camera interface (CSI) support
# Note: RPi3 has less total RAM than RPi4, so GPU memory allocation
# should be balanced with system memory needs
GPU_MEM = "64"

# =================================================================
# UART CONFIGURATION
# =================================================================
# Enable UART interface on GPIO pins 14/15 (pins 8/10)
# This allows communication with:
# - GPS modules for navigation
# - Serial sensors and devices
# - Debug console access
# - Communication with other microcontrollers
ENABLE_UART = "1"

# =================================================================
# PERFORMANCE OPTIMIZATIONS
# =================================================================
# RPi3-specific optimizations for robotics workloads
# These settings help compensate for the lower performance compared to RPi4

# Enable ARM frequency scaling for better performance
# This allows the CPU to run at higher frequencies when needed
CMDLINE += "arm_freq=1300"

# Optimize memory split for robotics applications
# Slightly more conservative GPU memory allocation due to lower total RAM
# Consider reducing to 32MB if system memory is constrained
